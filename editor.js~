/**
 * Affiliate Link Manager AI - Editor Integration
 * Version: 1.3.2
 * Author: Cosè Murciano
 */

jQuery(document).ready(function($) {
    'use strict';
    
    let selectedLinkId = null;
    let selectedLinkTitle = '';
    let searchTimer = null;
    
    /**
     * Inizializza integrazione editor
     */
    function initEditorIntegration() {
        // Aggiungi pulsante all'editor
        addEditorButton();
        
        // Setup event handlers
        setupEventHandlers();
        
        // Keyboard shortcuts
        setupKeyboardShortcuts();
        
        console.log('🔗 Affiliate Link Manager AI v1.3.2 - Editor Integration Loaded');
    }
    
    /**
     * Aggiungi pulsante all'editor
     */
    function addEditorButton() {
        // Funzione per aggiungere il pulsante
        function insertButton() {
            // Rimuovi eventuali pulsanti esistenti per evitare duplicati
            $('#alma-insert-link-btn').remove();
            
            // Cerca container per media buttons
            let mediaButtons = $('.wp-media-buttons').first();
            if (!mediaButtons.length) {
                mediaButtons = $('#wp-content-media-buttons').first();
            }
            if (!mediaButtons.length) {
                mediaButtons = $('.media-buttons').first();
            }
            
            if (mediaButtons.length > 0) {
                const button = $('<button>', {
                    type: 'button',
                    id: 'alma-insert-link-btn',
                    class: 'button',
                    title: alma_editor.strings.button_title || 'Inserisci link affiliato (Ctrl+Shift+L)',
                    html: '<span class="dashicons dashicons-admin-links" style="margin-right:4px;"></span>' + 
                          (alma_editor.strings.button_text || '🔗 Link Affiliati')
                });
                
                mediaButtons.append(button);
                
                // Event handler per il pulsante
                button.on('click', function(e) {
                    e.preventDefault();
                    console.log('🔗 Pulsante cliccato - Apertura modal');
                    openLinkModal();
                });
                
                return true;
            }
            return false;
        }
        
        // Prova ad aggiungere il pulsante immediatamente
        if (!insertButton()) {
            // Se fallisce, riprova dopo un breve delay
            setTimeout(function() {
                if (!insertButton()) {
                    // Ultima risorsa: aggiungi dopo il caricamento completo
                    $(window).on('load', function() {
                        setTimeout(insertButton, 500);
                    });
                }
            }, 100);
        }
        
        // Per compatibilità con Gutenberg
        if (typeof wp !== 'undefined' && wp.domReady) {
            wp.domReady(function() {
                setTimeout(insertButton, 200);
            });
        }
        
        // Observer per cambiamenti DOM (per editor dinamici)
        if (window.MutationObserver) {
            const observer = new MutationObserver(function(mutations) {
                mutations.forEach(function(mutation) {
                    if (mutation.type === 'childList') {
                        const mediaButtons = $('.wp-media-buttons, #wp-content-media-buttons, .media-buttons').first();
                        if (mediaButtons.length && !$('#alma-insert-link-btn').length) {
                            setTimeout(insertButton, 50);
                        }
                    }
                });
            });
            
            observer.observe(document.body, {
                childList: true,
                subtree: true
            });
        }
    }
    
    /**
     * Setup event handlers
     */
    function setupEventHandlers() {
        // Unbind precedenti per evitare duplicati
        $(document).off('.alma_editor');
        
        // Ricerca link
        $(document).on('input.alma_editor', '#alma-link-search', function() {
            const searchTerm = $(this).val();
            
            // Clear previous timer
            if (searchTimer) {
                clearTimeout(searchTimer);
            }
            
            // Debounce search
            searchTimer = setTimeout(function() {
                searchLinks(searchTerm);
            }, 300);
        });
        
        // Filtro tipologia
        $(document).on('change.alma_editor', '#alma-type-filter', function() {
            const searchTerm = $('#alma-link-search').val();
            searchLinks(searchTerm);
        });
        
        // Pulsante Cerca
        $(document).on('click.alma_editor', '#alma-search-btn', function() {
            const searchTerm = $('#alma-link-search').val();
            searchLinks(searchTerm);
        });
        
        // Selezione link
        $(document).on('click.alma_editor', '.alma-link-item', function() {
            $('.alma-link-item').removeClass('selected');
            $(this).addClass('selected');
            
            selectedLinkId = $(this).data('link-id');
            selectedLinkTitle = $(this).data('link-title');
            
            // Abilita pulsante inserimento
            $('#alma-insert-shortcode').prop('disabled', false);
            
            // Mostra opzioni shortcode
            $('.alma-shortcode-options').slideDown();
            
            // Aggiorna placeholder testo personalizzato
            $('#alma-custom-text').attr('placeholder', selectedLinkTitle);
        });
        
        // Opzioni testo
        $(document).on('change.alma_editor', 'input[name="alma_text_option"]', function() {
            const isCustom = $(this).val() === 'custom';
            $('#alma-custom-text').prop('disabled', !isCustom);
            
            if (isCustom) {
                $('#alma-custom-text').focus();
            }
        });
        
        // Inserisci shortcode
        $(document).on('click.alma_editor', '#alma-insert-shortcode', function() {
            if (!selectedLinkId) {
                alert(alma_editor.strings.no_selection || 'Seleziona prima un link');
                return;
            }
            
            insertShortcode();
        });
        
        // Chiudi modal
        $(document).on('click.alma_editor', '.alma-modal-close, .alma-btn-cancel', function() {
            closeModal();
        });
        
        // Chiudi cliccando fuori
        $(document).on('click.alma_editor', '#alma-link-modal', function(e) {
            if (e.target === this) {
                closeModal();
            }
        });
    }
    
    /**
     * Setup keyboard shortcuts
     */
    function setupKeyboardShortcuts() {
        $(document).on('keydown', function(e) {
            // Ctrl/Cmd + Shift + L per aprire modal
            if ((e.ctrlKey || e.metaKey) && e.shiftKey && e.keyCode === 76) {
                e.preventDefault();
                openLinkModal();
            }
            
            // ESC per chiudere modal
            if (e.keyCode === 27 && $('#alma-link-modal').is(':visible')) {
                closeModal();
            }
        });
    }
    
    /**
     * Apri modal selezione link
     */
    function openLinkModal() {
        console.log('🔗 openLinkModal chiamata');
        
        // Crea modal se non esiste
        if (!$('#alma-link-modal').length) {
            console.log('🔗 Creazione modal');
            createModal();
        }
        
        // Reset stato
        resetModalState();
        
        // Assicurati che il modal sia nel body e non in altri container
        if (!$('body > #alma-link-modal').length) {
            console.log('🔗 Spostamento modal nel body');
            $('#alma-link-modal').appendTo('body');
        }
        
        // Mostra modal con fadeIn
        console.log('🔗 Mostrando modal');
        $('#alma-link-modal').fadeIn(200, function() {
            console.log('🔗 Modal visibile');
            // Focus su ricerca dopo che il modal è visibile
            $('#alma-link-search').focus();
        });
        
        // Carica link iniziali
        searchLinks('');
    }
    
    /**
     * Crea HTML modal
     */
    function createModal() {
        // Se il modal esiste già, non ricrearlo
        if ($('#alma-link-modal').length) {
            return;
        }
        
        const modalHtml = `
        <div id="alma-link-modal" class="alma-modal-overlay" style="display:none;">
            <div class="alma-modal-content alma-link-selector">
                <div class="alma-modal-header">
                    <h2>🔗 Inserisci Link Affiliato</h2>
                    <button class="alma-modal-close" type="button">&times;</button>
                </div>
                
                <div class="alma-search-section">
                    <div class="alma-search-box">
                        <input type="text" 
                               id="alma-link-search" 
                               placeholder="${alma_editor.strings.search_placeholder || 'Cerca link affiliato...'}"
                               autocomplete="off">
                        <span class="dashicons dashicons-search"></span>
                    </div>
                    
                    <div class="alma-search-filters">
                        <select id="alma-type-filter">
                            <option value="">Tutte le tipologie</option>
                        </select>
                        <button type="button" id="alma-search-btn" class="button">
                            Cerca
                        </button>
                    </div>
                </div>
                
                <div class="alma-results-section">
                    <div id="alma-search-results">
                        <div class="alma-loading">
                            <span class="spinner is-active"></span>
                            <p>${alma_editor.strings.loading || 'Caricamento...'}</p>
                        </div>
                    </div>
                </div>
                
                <div class="alma-shortcode-options" style="display:none;">
                    <h3>⚙️ Opzioni Shortcode</h3>
                    
                    <div class="alma-option-row">
                        <label>Testo del link:</label>
                        <div class="alma-radio-group">
                            <label>
                                <input type="radio" name="alma_text_option" value="auto" checked>
                                Usa titolo link
                            </label>
                            <label>
                                <input type="radio" name="alma_text_option" value="custom">
                                Testo personalizzato
                            </label>
                        </div>
                    </div>
                    
                    <div class="alma-option-row">
                        <label for="alma-custom-text">Testo personalizzato:</label>
                        <input type="text" 
                               id="alma-custom-text" 
                               placeholder="Es: Clicca qui per l'offerta"
                               disabled>
                    </div>
                    
                    <div class="alma-option-row">
                        <label for="alma-custom-class">Classe CSS:</label>
                        <input type="text" 
                               id="alma-custom-class" 
                               value="affiliate-link-btn"
                               placeholder="affiliate-link-btn">
                    </div>
                </div>
                
                <div class="alma-modal-footer">
                    <button type="button" id="alma-insert-shortcode" class="button button-primary" disabled>
                        ${alma_editor.strings.insert || 'Inserisci'}
                    </button>
                    <button type="button" class="button alma-btn-cancel">
                        Annulla
                    </button>
                </div>
            </div>
        </div>`;
        
        $('body').append(modalHtml);
        
        // Carica le tipologie dopo aver creato il modal
        loadLinkTypes();
    }
    
    /**
     * Carica tipologie link tramite AJAX
     */
    function loadLinkTypes() {
        $.ajax({
            url: alma_editor.ajax_url,
            type: 'POST',
            data: {
                action: 'alma_get_link_types',
                nonce: alma_editor.nonce
            },
            success: function(response) {
                if (response.success && response.data.length > 0) {
                    let optionsHtml = '<option value="">Tutte le tipologie</option>';
                    response.data.forEach(function(type) {
                        optionsHtml += `<option value="${type.id}">${escapeHtml(type.name)}</option>`;
                    });
                    $('#alma-type-filter').html(optionsHtml);
                }
            }
        });
    }
    
    /**
     * Reset stato modal
     */
    function resetModalState() {
        selectedLinkId = null;
        selectedLinkTitle = '';
        $('#alma-link-search').val('');
        $('#alma-type-filter').val('');
        $('#alma-custom-text').val('').prop('disabled', true);
        $('#alma-custom-class').val('affiliate-link-btn');
        $('input[name="alma_text_option"][value="auto"]').prop('checked', true);
        $('#alma-insert-shortcode').prop('disabled', true);
        $('.alma-shortcode-options').hide();
        $('.alma-link-item').removeClass('selected');
    }
    
    /**
     * Cerca link affiliati
     */
    function searchLinks(searchTerm) {
        const typeFilter = $('#alma-type-filter').val();
        
        // Mostra loading
        $('#alma-search-results').html(`
            <div class="alma-loading">
                <span class="spinner is-active"></span>
                <p>${alma_editor.strings.loading || 'Caricamento...'}</p>
            </div>
        `);
        
        // AJAX request
        $.ajax({
            url: alma_editor.ajax_url,
            type: 'POST',
            data: {
                action: 'alma_search_links',
                nonce: alma_editor.nonce,
                search: searchTerm,
                type_filter: typeFilter
            },
            success: function(response) {
                if (response.success && response.data.length > 0) {
                    displaySearchResults(response.data);
                } else {
                    displayNoResults();
                }
            },
            error: function() {
                displayError();
            }
        });
    }
    
    /**
     * Mostra risultati ricerca
     */
    function displaySearchResults(links) {
        let html = '<div class="alma-links-list">';
        
        links.forEach(function(link) {
            const types = link.types ? link.types.join(', ') : '';
            const clicks = link.clicks || 0;
            const usage = link.usage ? link.usage.post_count : 0;
            
            html += `
            <div class="alma-link-item" 
                 data-link-id="${link.id}" 
                 data-link-title="${escapeHtml(link.title)}">
                
                <div class="alma-link-main">
                    <strong class="alma-link-title">${escapeHtml(link.title)}</strong>
                    ${types ? `<span class="alma-link-type">${escapeHtml(types)}</span>` : ''}
                </div>
                
                <div class="alma-link-meta">
                    <span class="alma-link-url" title="${escapeHtml(link.url || '')}">
                        ${link.url ? escapeHtml(truncateUrl(link.url)) : 'URL non configurato'}
                    </span>
                </div>
                
                <div class="alma-link-stats">
                    <span title="Click totali">
                        <span class="dashicons dashicons-chart-bar"></span> ${clicks}
                    </span>
                    <span title="Utilizzi">
                        <span class="dashicons dashicons-admin-page"></span> ${usage}
                    </span>
                </div>
            </div>`;
        });
        
        html += '</div>';
        
        $('#alma-search-results').html(html);
    }
    
    /**
     * Mostra messaggio nessun risultato
     */
    function displayNoResults() {
        $('#alma-search-results').html(`
            <div class="alma-no-results">
                <span class="dashicons dashicons-search" style="font-size:48px;opacity:0.3;"></span>
                <p>${alma_editor.strings.no_results || 'Nessun link trovato'}</p>
                <p><small>Prova con altri termini di ricerca</small></p>
            </div>
        `);
    }
    
    /**
     * Mostra errore
     */
    function displayError() {
        $('#alma-search-results').html(`
            <div class="alma-error">
                <span class="dashicons dashicons-warning" style="font-size:48px;color:#d63638;"></span>
                <p>${alma_editor.strings.error || 'Si è verificato un errore'}</p>
                <p><small>Riprova tra qualche secondo</small></p>
            </div>
        `);
    }
    
    /**
     * Inserisci shortcode nell'editor
     */
    function insertShortcode() {
        let shortcode = `[affiliate_link id="${selectedLinkId}"`;
        
        // Aggiungi testo personalizzato se selezionato
        const textOption = $('input[name="alma_text_option"]:checked').val();
        if (textOption === 'custom') {
            const customText = $('#alma-custom-text').val().trim();
            if (customText) {
                shortcode += ` text="${escapeShortcodeAttr(customText)}"`;
            }
        }
        
        // Aggiungi classe personalizzata se diversa dal default
        const customClass = $('#alma-custom-class').val().trim();
        if (customClass && customClass !== 'affiliate-link-btn') {
            shortcode += ` class="${escapeShortcodeAttr(customClass)}"`;
        }
        
        shortcode += ']';
        
        // Inserisci nell'editor appropriato
        if (insertIntoEditor(shortcode)) {
            // Mostra successo e chiudi modal
            showSuccessMessage();
            setTimeout(function() {
                closeModal();
            }, 1500);
        } else {
            alert(alma_editor.strings.insert_error || 'Errore durante l\'inserimento');
        }
    }
    
    /**
     * Inserisci nell'editor (Gutenberg o Classic)
     */
    function insertIntoEditor(shortcode) {
        try {
            // Prova con Gutenberg Block Editor
            if (typeof wp !== 'undefined' && wp.data && wp.data.select('core/block-editor')) {
                const selectedBlock = wp.data.select('core/block-editor').getSelectedBlock();
                
                if (selectedBlock && selectedBlock.name === 'core/paragraph') {
                    // Aggiungi al blocco paragrafo esistente
                    const currentContent = selectedBlock.attributes.content || '';
                    const newContent = currentContent + ' ' + shortcode;
                    
                    wp.data.dispatch('core/block-editor').updateBlockAttributes(
                        selectedBlock.clientId,
                        { content: newContent }
                    );
                } else {
                    // Crea nuovo blocco shortcode
                    const block = wp.blocks.createBlock('core/shortcode', {
                        text: shortcode
                    });
                    wp.data.dispatch('core/block-editor').insertBlocks(block);
                }
                return true;
            }
            
            // Prova con Classic Editor (TinyMCE)
            if (typeof tinyMCE !== 'undefined' && tinyMCE.activeEditor && !tinyMCE.activeEditor.isHidden()) {
                tinyMCE.activeEditor.execCommand('mceInsertContent', false, shortcode);
                return true;
            }
            
            // Fallback: inserisci in textarea
            const textarea = document.getElementById('content');
            if (textarea) {
                const start = textarea.selectionStart;
                const end = textarea.selectionEnd;
                const text = textarea.value;
                
                textarea.value = text.substring(0, start) + shortcode + text.substring(end);
                textarea.selectionStart = textarea.selectionEnd = start + shortcode.length;
                
                // Trigger change event
                const event = new Event('input', { bubbles: true });
                textarea.dispatchEvent(event);
                
                return true;
            }
            
            return false;
            
        } catch (error) {
            console.error('Errore inserimento shortcode:', error);
            return false;
        }
    }
    
    /**
     * Mostra messaggio di successo
     */
    function showSuccessMessage() {
        const message = $(`
            <div class="alma-success-toast">
                <span class="dashicons dashicons-yes"></span>
                Link inserito con successo!
            </div>
        `);
        
        $('body').append(message);
        
        setTimeout(function() {
            message.fadeOut(function() {
                message.remove();
            });
        }, 2000);
    }
    
    /**
     * Chiudi modal
     */
    function closeModal() {
        $('#alma-link-modal').fadeOut(200);
        resetModalState();
    }
    
    /**
     * Helper functions
     */
    function escapeHtml(text) {
        const div = document.createElement('div');
        div.textContent = text || '';
        return div.innerHTML;
    }
    
    function escapeShortcodeAttr(text) {
        return text.replace(/"/g, '&quot;').replace(/'/g, '&#39;').replace(/\[/g, '&#91;').replace(/\]/g, '&#93;');
    }
    
    function truncateUrl(url, maxLength = 40) {
        if (!url || url.length <= maxLength) return url;
        return url.substring(0, maxLength) + '...';
    }
    
    // Inizializza quando DOM è pronto
    initEditorIntegration();
});